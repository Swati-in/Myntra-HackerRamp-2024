{"ast":null,"code":"var _jsxFileName = \"S:\\\\Swipe\\\\swipeable-cards\\\\src\\\\components\\\\SwipeableContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport TrendCard from './TrendCard';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom'; // Ensure useHistory is imported correctly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  position: relative;\n  background-color: lightgreen;\n`;\n_c = Container;\nconst ButtonContainer = styled.div`\n  position: absolute;\n  bottom: 100px;\n  display: flex;\n  gap: 20px;\n`;\n_c2 = ButtonContainer;\nconst SwipeButton = styled.button`\n  background-color: white;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n_c3 = SwipeButton;\nconst EndCard = styled.div`\n  position: absolute;\n  bottom: 50px;\n  width: 100%;\n  text-align: center;\n  font-size: 18px;\n  cursor: pointer;\n`;\n_c4 = EndCard;\nconst SwipeableContainer = ({\n  trends,\n  onLike,\n  onDislike,\n  onShowRelated\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [swipeDirection, setSwipeDirection] = useState(null);\n  const [likedTrends, setLikedTrends] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    if (swipeDirection === 'Right') {\n      setLikedTrends(prevLikedTrends => [...prevLikedTrends, trends[currentIndex]]);\n    }\n  }, [swipeDirection, currentIndex, trends]);\n  useEffect(() => {\n    if (swipeDirection) {\n      const timeout = setTimeout(() => {\n        setCurrentIndex(prevIndex => (prevIndex + 1) % trends.length); // ensure index is within bounds\n        setSwipeDirection(null);\n      }, 500); // match the duration with CSS transition\n      return () => clearTimeout(timeout);\n    }\n  }, [swipeDirection, trends.length]);\n  const handleSwiped = direction => {\n    setSwipeDirection(direction);\n    if (direction === 'Right') {\n      onLike(trends[currentIndex]);\n    } else if (direction === 'Left') {\n      onDislike(trends[currentIndex]);\n    } else if (direction === 'Up') {\n      onShowRelated(trends[currentIndex]);\n    }\n  };\n  const handlers = useSwipeable({\n    onSwiped: eventData => handleSwiped(eventData.dir),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n  const handleSwipeLeft = () => handleSwiped('Left');\n  const handleSwipeRight = () => handleSwiped('Right');\n  const handleEndCardClick = () => {\n    history.push('/liked-trends', {\n      likedTrends\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ...handlers,\n    children: [trends[currentIndex] && /*#__PURE__*/_jsxDEV(TrendCard, {\n      trend: trends[currentIndex],\n      swipeDirection: swipeDirection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SwipeButton, {\n        onClick: handleSwipeLeft,\n        children: \"Swipe Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwipeButton, {\n        onClick: handleSwipeRight,\n        children: \"Swipe Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EndCard, {\n      onClick: handleEndCardClick,\n      children: \"Click here to see liked trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(SwipeableContainer, \"XLgO1OpIMdPnatT3VAt9+EAIRUo=\", false, function () {\n  return [useHistory, useSwipeable];\n});\n_c5 = SwipeableContainer;\nexport default SwipeableContainer;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ButtonContainer\");\n$RefreshReg$(_c3, \"SwipeButton\");\n$RefreshReg$(_c4, \"EndCard\");\n$RefreshReg$(_c5, \"SwipeableContainer\");","map":{"version":3,"names":["React","useState","useEffect","useSwipeable","TrendCard","styled","useHistory","jsxDEV","_jsxDEV","Container","div","_c","ButtonContainer","_c2","SwipeButton","button","_c3","EndCard","_c4","SwipeableContainer","trends","onLike","onDislike","onShowRelated","_s","currentIndex","setCurrentIndex","swipeDirection","setSwipeDirection","likedTrends","setLikedTrends","history","prevLikedTrends","timeout","setTimeout","prevIndex","length","clearTimeout","handleSwiped","direction","handlers","onSwiped","eventData","dir","preventDefaultTouchmoveEvent","trackMouse","handleSwipeLeft","handleSwipeRight","handleEndCardClick","push","children","trend","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c5","$RefreshReg$"],"sources":["S:/Swipe/swipeable-cards/src/components/SwipeableContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport TrendCard from './TrendCard';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom'; // Ensure useHistory is imported correctly\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  position: relative;\r\n  background-color: lightgreen;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 100px;\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nconst SwipeButton = styled.button`\r\n  background-color: white;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst EndCard = styled.div`\r\n  position: absolute;\r\n  bottom: 50px;\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SwipeableContainer = ({ trends, onLike, onDislike, onShowRelated }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [swipeDirection, setSwipeDirection] = useState(null);\r\n  const [likedTrends, setLikedTrends] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (swipeDirection === 'Right') {\r\n      setLikedTrends((prevLikedTrends) => [...prevLikedTrends, trends[currentIndex]]);\r\n    }\r\n  }, [swipeDirection, currentIndex, trends]);\r\n\r\n  useEffect(() => {\r\n    if (swipeDirection) {\r\n      const timeout = setTimeout(() => {\r\n        setCurrentIndex((prevIndex) => (prevIndex + 1) % trends.length); // ensure index is within bounds\r\n        setSwipeDirection(null);\r\n      }, 500); // match the duration with CSS transition\r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [swipeDirection, trends.length]);\r\n\r\n  const handleSwiped = (direction) => {\r\n    setSwipeDirection(direction);\r\n    if (direction === 'Right') {\r\n      onLike(trends[currentIndex]);\r\n    } else if (direction === 'Left') {\r\n      onDislike(trends[currentIndex]);\r\n    } else if (direction === 'Up') {\r\n      onShowRelated(trends[currentIndex]);\r\n    }\r\n  };\r\n\r\n  const handlers = useSwipeable({\r\n    onSwiped: (eventData) => handleSwiped(eventData.dir),\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true,\r\n  });\r\n\r\n  const handleSwipeLeft = () => handleSwiped('Left');\r\n  const handleSwipeRight = () => handleSwiped('Right');\r\n\r\n  const handleEndCardClick = () => {\r\n    history.push('/liked-trends', { likedTrends });\r\n  };\r\n\r\n  return (\r\n    <Container {...handlers}>\r\n      {trends[currentIndex] && <TrendCard trend={trends[currentIndex]} swipeDirection={swipeDirection} />}\r\n      <ButtonContainer>\r\n        <SwipeButton onClick={handleSwipeLeft}>Swipe Left</SwipeButton>\r\n        <SwipeButton onClick={handleSwipeRight}>Swipe Right</SwipeButton>\r\n      </ButtonContainer>\r\n      <EndCard onClick={handleEndCardClick}>Click here to see liked trends</EndCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SwipeableContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}