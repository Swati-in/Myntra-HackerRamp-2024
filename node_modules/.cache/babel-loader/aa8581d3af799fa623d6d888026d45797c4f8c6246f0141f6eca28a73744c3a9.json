{"ast":null,"code":"var _jsxFileName = \"S:\\\\Swipe\\\\swipeable-cards\\\\src\\\\components\\\\SwipeableContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TrendCard from './TrendCard'; // Adjust the path as needed\nimport styled from 'styled-components';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  position: relative;\n  background-color: black; // Add a black background color\n`;\n_c = Container;\nconst SwipeableContainer = ({\n  trends,\n  onLike,\n  onDislike,\n  onShowRelated\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const handleSwiped = eventData => {\n    if (eventData.dir === 'Right') {\n      onLike(trends[currentIndex]);\n    } else if (eventData.dir === 'Left') {\n      onDislike(trends[currentIndex]);\n    } else if (eventData.dir === 'Up') {\n      onShowRelated(trends[currentIndex]);\n    }\n    setCurrentIndex(currentIndex + 1);\n  };\n  const handlers = useSwipeable({\n    onSwiped: eventData => handleSwiped(eventData),\n    preventDefaultTouchmoveEvent: true\n  });\n  return /*#__PURE__*/_jsxDEV(GestureHandlerRootView, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      ...handlers,\n      children: trends[currentIndex] && /*#__PURE__*/_jsxDEV(TrendCard, {\n        trend: trends[currentIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(SwipeableContainer, \"OM2bfxpTBldshYlRrxZlh26fNIU=\", true);\n_c2 = SwipeableContainer;\nexport default SwipeableContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SwipeableContainer\");","map":{"version":3,"names":["React","useState","TrendCard","styled","Card","CardWrapper","jsxDEV","_jsxDEV","Container","div","_c","SwipeableContainer","trends","onLike","onDislike","onShowRelated","_s","currentIndex","setCurrentIndex","handleSwiped","eventData","dir","handlers","useSwipeable","onSwiped","preventDefaultTouchmoveEvent","GestureHandlerRootView","children","trend","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["S:/Swipe/swipeable-cards/src/components/SwipeableContainer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TrendCard from './TrendCard'; // Adjust the path as needed\r\nimport styled from 'styled-components';\r\nimport { Card, CardWrapper } from 'react-swipeable-cards';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  position: relative;\r\n  background-color: black; // Add a black background color\r\n`;\r\n\r\nconst SwipeableContainer = ({ trends, onLike, onDislike, onShowRelated }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const handleSwiped = (eventData) => {\r\n    if (eventData.dir === 'Right') {\r\n      onLike(trends[currentIndex]);\r\n    } else if (eventData.dir === 'Left') {\r\n      onDislike(trends[currentIndex]);\r\n    } else if (eventData.dir === 'Up') {\r\n      onShowRelated(trends[currentIndex]);\r\n    }\r\n    setCurrentIndex(currentIndex + 1);\r\n  };\r\n\r\n  const handlers = useSwipeable({\r\n    onSwiped: (eventData) => handleSwiped(eventData),\r\n    preventDefaultTouchmoveEvent: true,\r\n  });\r\n\r\n  return (\r\n    <GestureHandlerRootView>\r\n      <Container {...handlers}>\r\n        {trends[currentIndex] && <TrendCard trend={trends[currentIndex]} />}\r\n      </Container>\r\n    </GestureHandlerRootView>\r\n  );\r\n};\r\n\r\nexport default SwipeableContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,IAAI,EAAEC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,SAAS;AASf,MAAMG,kBAAkB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,MAAM;EAAEC,SAAS;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMkB,YAAY,GAAIC,SAAS,IAAK;IAClC,IAAIA,SAAS,CAACC,GAAG,KAAK,OAAO,EAAE;MAC7BR,MAAM,CAACD,MAAM,CAACK,YAAY,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAIG,SAAS,CAACC,GAAG,KAAK,MAAM,EAAE;MACnCP,SAAS,CAACF,MAAM,CAACK,YAAY,CAAC,CAAC;IACjC,CAAC,MAAM,IAAIG,SAAS,CAACC,GAAG,KAAK,IAAI,EAAE;MACjCN,aAAa,CAACH,MAAM,CAACK,YAAY,CAAC,CAAC;IACrC;IACAC,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,MAAMK,QAAQ,GAAGC,YAAY,CAAC;IAC5BC,QAAQ,EAAGJ,SAAS,IAAKD,YAAY,CAACC,SAAS,CAAC;IAChDK,4BAA4B,EAAE;EAChC,CAAC,CAAC;EAEF,oBACElB,OAAA,CAACmB,sBAAsB;IAAAC,QAAA,eACrBpB,OAAA,CAACC,SAAS;MAAA,GAAKc,QAAQ;MAAAK,QAAA,EACpBf,MAAM,CAACK,YAAY,CAAC,iBAAIV,OAAA,CAACL,SAAS;QAAC0B,KAAK,EAAEhB,MAAM,CAACK,YAAY;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE7B,CAAC;AAAChB,EAAA,CA1BIL,kBAAkB;AAAAsB,GAAA,GAAlBtB,kBAAkB;AA4BxB,eAAeA,kBAAkB;AAAC,IAAAD,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}